@page "/edit-event/{Id:int?}"
@using EventSystem.Data
@using EventSystem.Models
@inject ApplicationDbContext DbContext
@inject NavigationManager Navigation

<style>
    .form-container {
        max-width: 600px;
        margin: 2rem auto; /* Center the form horizontally */
        padding: 2rem;
        border: 1px solid #5bc0de; /* Light blue border */
        border-radius: 0.5rem; /* Rounded corners */
        background-color: #ffffff; /* White background */
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Light shadow for depth */
    }

    h3 {
        color: #5bc0de; /* Light blue color */
        text-align: center; /* Center the heading text */
        margin-bottom: 1.5rem; /* Space below the heading */
    }

    .form-group {
        margin-bottom: 1.5rem; /* Space below each form group */
    }

    label {
        font-weight: bold;
        color: #333;
        margin-bottom: 0.5rem;
        display: block;
    }

    .btn-container {
        display: flex;
        justify-content: space-between;
        margin-top: 2rem;
    }

    .btn-primary {
        background-color: #5bc0de; /* Light blue for primary button */
        border-color: #5bc0de;
    }

    .btn-secondary {
        background-color: #6c757d; /* Standard grey for secondary button */
        border-color: #6c757d;
    }
</style>

<div class="form-container">
    <h3>@(Event.Id == 0 ? "Create Event" : "Update Event")</h3>

    <EditForm Model="Event" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="name">Name:</label>
            <InputText id="name" class="form-control" @bind-Value="Event.Name" />
        </div>
        <div class="form-group">
            <label for="date">Date:</label>
            <InputDate id="date" class="form-control" @bind-Value="Event.Date" />
        </div>
        <div class="form-group">
            <label for="totalSeats">Total Seats:</label>
            <InputNumber id="totalSeats" class="form-control" @bind-Value="Event.TotalSeats" />
        </div>
        <div class="form-group">
            <label for="description">Description:</label>
            <InputTextArea id="description" class="form-control" @bind-Value="Event.Description" />
        </div>

        <div class="btn-container">
            <button type="submit" class="btn btn-primary">Save</button>
            <a class="btn btn-secondary" href="/manage-events">Back to List</a>
        </div>
    </EditForm>
</div>

@code {
    [Parameter] public int? Id { get; set; }
    private Event Event { get; set; } = new Event();

    protected override async Task OnInitializedAsync()
    {
        if (Id.HasValue)
        {
            Event = await DbContext.Events.FindAsync(Id.Value);
            if (Event == null)
            {
                Event = new Event(); // Initialize if not found
            }
        }
    }

    private async Task HandleValidSubmit()
    {
        if (Event.Id == 0)
        {
            Event.SeatsAvailable = Event.TotalSeats; // Initialize SeatsAvailable when creating a new event
            DbContext.Events.Add(Event);
        }
        else
        {
            DbContext.Events.Update(Event);
        }
        await DbContext.SaveChangesAsync();
        Navigation.NavigateTo("/manage-events");
    }
}
