@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">EventSystem</a>
        <!-- Removed button element -->
    </div>
</div>

<div class="@NavMenuCssClass">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="events">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Events
            </NavLink>
        </div>
        @if (authenticationState.User.Identity.IsAuthenticated)
        {
            if (authenticationState.User.IsInRole("Manager"))
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="manage-events">
                        <span class="oi oi-list-rich" aria-hidden="true"></span> Manage Event
                    </NavLink>
                </div>
            }

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="events">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Events
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private AuthenticationState authenticationState;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override async Task OnInitializedAsync()
    {
        authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
    }
}
